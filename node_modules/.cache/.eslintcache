[{"D:\\RedMonk-Editor\\client\\src\\index.js":"1","D:\\RedMonk-Editor\\client\\src\\App.js":"2","D:\\RedMonk-Editor\\client\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":4710,"mtime":1626547083683,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8h8ic4",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\RedMonk-Editor\\client\\src\\index.js",[],"D:\\RedMonk-Editor\\client\\src\\App.js",["15","16"],"import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nimport \"./App.css\";\nimport logo from './redmonk.png';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      html: \"\",\n      showHTML : false,\n      showCSS : false,\n      showJS : false\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  hideComponent(name) {\n    switch (name) {\n      case \"showHTML\":\n        this.setState({ showHTML: true, showCSS: false, showJS: false });\n        break;\n      case \"showCSS\":\n        this.setState({ showCSS: true, showJS: false, showHTML: false });\n        break;\n      case \"showJS\":\n        this.setState({ showJS: true, showHTML: false, showCSS: false });\n        break;\n    }\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n    const { html, css, js } = this.state;\n    const { showHTML, showCSS, showJS } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n\n    return (\n      <div className=\"App\">\n\n        <section className=\"redmonk\">\n          <table>\n              <tr>\n                <td>\n                  <img className=\"logoRM\" src={logo} alt=\"Logo\" />\n                </td>\n                <td className=\"textRM\">\n                  RedMonk Codes\n                </td>\n              </tr>\n          </table>\n        </section>\n\n        <section className=\"types\">\n          <div className=\"title-header\">EDITOR TYPE</div>\n            <div>\n              <table>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showHTML\")}>\n                      Open HTML Editor\n                    </button>\n                </tr>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showCSS\")}>\n                      Open CSS Editor\n                    </button>\n                </tr>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showJS\")}>\n                      Open JS Editor\n                    </button>\n                </tr>\n              </table>\n            </div>\n        </section>\n\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"title-header\">EDITOR</div>\n              {showHTML && (\n                <CodeMirror\n                  value={html}\n                  options={{\n                    mode: 'htmlmixed',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, html) => {\n                    this.setState({ html });\n                  }}\n                />\n              )}\n              {showCSS && (\n                <CodeMirror\n                  value={css}\n                  options={{\n                    mode: 'css',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, css) => {\n                    this.setState({ css });\n                  }}\n                />\n              )}\n              {showJS && (\n                <CodeMirror\n                  value={js}\n                  options={{\n                    mode: 'javascript',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, js) => {\n                    this.setState({ js });\n                  }}\n                />\n              )}\n            </div>\n        </section>\n\n        <section className=\"result\">\n          <div className=\"title-header\">RESULT</div>\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","D:\\RedMonk-Editor\\client\\src\\reportWebVitals.js",[],{"ruleId":"17","severity":1,"message":"18","line":1,"column":17,"nodeType":"19","messageId":"20","endLine":1,"endColumn":26},{"ruleId":"21","severity":1,"message":"22","line":28,"column":5,"nodeType":"23","messageId":"24","endLine":38,"endColumn":6},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]