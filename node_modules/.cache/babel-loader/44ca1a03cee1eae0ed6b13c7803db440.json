{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pusher\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.syncUpdates = () => {\n      const data = { ...this.state\n      };\n      axios.post(\"http://localhost:5000/update-editor\", data).catch(console.error);\n    };\n\n    this.runCode = () => {\n      const {\n        html,\n        css,\n        js\n      } = this.state;\n      const iframe = this.refs.iframe;\n      const document = iframe.contentDocument;\n      const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n      document.open();\n      document.write(documentContents);\n      document.close();\n    };\n\n    this.state = {\n      id: \"\",\n      html: \"\",\n      css: \"\",\n      js: \"\"\n    };\n    this.pusher = new Pusher(\"18160601861a89d7f8f7\", {\n      cluster: \"eu\",\n      forceTLS: true\n    });\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: pushid()\n    });\n    this.channel.bind(\"text-update\", data => {\n      const {\n        id\n      } = this.state;\n      if (data.id === id) return;\n      this.setState({\n        html: data.html,\n        css: data.css,\n        js: data.js\n      });\n    });\n  }\n\n  render() {\n    const {\n      html,\n      js,\n      css\n    } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"playground\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor html-code\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: \" HTML \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(CodeMirror, {\n            value: html,\n            options: {\n              mode: \"htmlmixed\",\n              ...codeMirrorOptions\n            },\n            onBeforeChange: (editor, data, html) => {\n              this.setState({\n                html\n              }, () => this.syncUpdates());\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 60\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"result\",\n          className: \"iframe\",\n          ref: \"iframe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"result\",\n          className: \"iframe\",\n          ref: \"iframe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Pusher/client/src/App.js"],"names":["React","Component","Controlled","CodeMirror","Pusher","pushid","axios","App","constructor","syncUpdates","data","state","post","catch","console","error","runCode","html","css","js","iframe","refs","document","contentDocument","documentContents","open","write","close","id","pusher","cluster","forceTLS","channel","subscribe","componentDidUpdate","componentDidMount","setState","bind","render","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","mode","editor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\n\nimport \"./App.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: \"\",\n            html: \"\",\n            css: \"\",\n            js: \"\"\n        };\n\n        this.pusher = new Pusher(\"18160601861a89d7f8f7\", {\n            cluster: \"eu\",\n            forceTLS: true\n        });\n\n        this.channel = this.pusher.subscribe(\"editor\");\n    }\n\n    componentDidUpdate() {\n        this.runCode();\n    }\n\n    componentDidMount() {\n        this.setState({\n            id: pushid()\n        });\n\n        this.channel.bind(\"text-update\", data => {\n            const { id } = this.state;\n            if (data.id === id) return;\n\n            this.setState({\n                html: data.html,\n                css: data.css,\n                js: data.js\n            });\n        });\n    }\n\n    syncUpdates = () => {\n        const data = {...this.state };\n\n        axios\n            .post(\"http://localhost:5000/update-editor\", data)\n            .catch(console.error);\n    };\n\n    runCode = () => {\n        const { html, css, js } = this.state;\n\n        const iframe = this.refs.iframe;\n        const document = iframe.contentDocument;\n        const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n        document.open();\n        document.write(documentContents);\n        document.close();\n    };\n\n    render() {\n        const { html, js, css } = this.state;\n        const codeMirrorOptions = {\n            theme: \"material\",\n            lineNumbers: true,\n            scrollbarStyle: null,\n            lineWrapping: true\n        };\n\n        return ( <\n            div className = \"App\" >\n            <\n            section className = \"playground\" >\n            <\n            div className = \"code-editor html-code\" >\n            <\n            div className = \"editor-header\" > HTML < /div> <\n            CodeMirror value = { html }\n            options = {\n                {\n                    mode: \"htmlmixed\",\n                    ...codeMirrorOptions\n                }\n            }\n            onBeforeChange = {\n                (editor, data, html) => {\n                    this.setState({ html }, () => this.syncUpdates());\n                }\n            }\n            /> <\n            /div> {\n                /* <div className=\"code-editor css-code\">\n                            <div className=\"editor-header\">CSS</div>\n                            <CodeMirror\n                              value={css}\n                              options={{\n                                mode: \"css\",\n                                ...codeMirrorOptions\n                              }}\n                              onBeforeChange={(editor, data, css) => {\n                                this.setState({ css }, () => this.syncUpdates());\n                              }}\n                            />\n                          </div>\n                          <div className=\"code-editor js-code\">\n                            <div className=\"editor-header\">JavaScript</div>\n                            <CodeMirror\n                              value={js}\n                              options={{\n                                mode: \"javascript\",\n                                ...codeMirrorOptions\n                              }}\n                              onBeforeChange={(editor, data, js) => {\n                                this.setState({ js }, () => this.syncUpdates());\n                              }}\n                            />\n                          </div> */\n            } <\n            /section> <\n            section className = \"result\" >\n            <\n            iframe title = \"result\"\n            className = \"iframe\"\n            ref = \"iframe\" / >\n            <\n            /section> <\n            section className = \"result\" >\n            <\n            iframe title = \"result\"\n            className = \"iframe\"\n            ref = \"iframe\" / >\n            <\n            /section> <\n            /div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}