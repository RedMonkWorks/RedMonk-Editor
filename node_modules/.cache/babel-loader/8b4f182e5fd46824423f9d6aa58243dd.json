{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pusher\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.runCode = () => {\n      const {\n        html,\n        css,\n        js\n      } = this.state;\n      const iframe = this.refs.iframe;\n      const document = iframe.contentDocument;\n      const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n      document.open();\n      document.write(documentContents);\n      document.close();\n    };\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  render() {\n    const {\n      html\n    } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"files\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-header\",\n          children: \"EDITOR TYPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedOption,\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"HTML\",\n            children: \"HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CSS\",\n            children: \"CSS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"JS\",\n            children: \"JavaScript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"playground\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor html-code\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-header\",\n            children: \"EDITOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n            value: html,\n            options: {\n              mode: 'htmlmixed',\n              ...codeMirrorOptions\n            },\n            onBeforeChange: (editor, data, html) => {\n              this.setState({\n                html\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-header\",\n          children: \"RESULT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"result\",\n          className: \"iframe\",\n          ref: \"iframe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Pusher/client/src/App.js"],"names":["React","Component","Controlled","CodeMirror","Pusher","pushid","axios","App","runCode","html","css","js","state","iframe","refs","document","contentDocument","documentContents","open","write","close","componentDidUpdate","render","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","selectedOption","handleChange","mode","editor","data","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  \n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n    const { html } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n\n    return (\n      <div className=\"App\">\n        <section className=\"files\">\n          <div className=\"title-header\">EDITOR TYPE</div>\n          <select value={this.state.selectedOption} onChange={this.handleChange}>\n              <option value={\"HTML\"}>HTML</option>\n              <option value={\"CSS\"}>CSS</option>\n              <option value={\"JS\"}>JavaScript</option>\n          </select>\n        </section>\n\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"title-header\">EDITOR</div>\n              <CodeMirror\n                value={html}\n                options={{\n                  mode: 'htmlmixed',\n                  ...codeMirrorOptions,\n                }}\n                onBeforeChange={(editor, data, html) => {\n                  this.setState({ html });\n                }}\n              />\n            </div>\n        </section>\n\n        <section className=\"result\">\n          <div className=\"title-header\">RESULT</div>\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}