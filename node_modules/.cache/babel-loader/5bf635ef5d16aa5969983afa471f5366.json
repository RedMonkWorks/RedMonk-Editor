{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pusher\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\nimport ReactDOM from 'react-dom';\nimport FileBrowser, { FileRenderers, FolderRenderers, Groupers, Icons } from 'react-keyed-file-browser';\nimport Moment from 'moment';\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mount = document.querySelectorAll('div.demo-mount-grouped-thumbnails');\nReactDOM.render( /*#__PURE__*/_jsxDEV(FileBrowser, {\n  icons: Icons.FontAwesome(4),\n  files: [{\n    key: 'cat.png',\n    modified: +Moment().subtract(1, 'hours'),\n    size: 1.5 * 1024 * 1024\n  }, {\n    key: 'kitten.png',\n    modified: +Moment().subtract(3, 'days'),\n    size: 545 * 1024\n  }, {\n    key: 'elephant.png',\n    modified: +Moment().subtract(3, 'days'),\n    size: 52 * 1024\n  }, {\n    key: 'dog.png',\n    modified: +Moment().subtract(1, 'hours'),\n    size: 1.5 * 1024 * 1024\n  }, {\n    key: 'turtle.png',\n    modified: +Moment().subtract(3, 'months'),\n    size: 545 * 1024\n  }, {\n    key: 'gecko.png',\n    modified: +Moment().subtract(2, 'days'),\n    size: 52 * 1024\n  }, {\n    key: 'centipede.png',\n    modified: +Moment().subtract(0.5, 'hours'),\n    size: 1.5 * 1024 * 1024\n  }, {\n    key: 'possum.png',\n    modified: +Moment().subtract(32, 'days'),\n    size: 545 * 1024\n  }],\n  renderStyle: \"list\",\n  nestChildren: true,\n  headerRenderer: null,\n  group: Groupers.GroupByModifiedRelative,\n  fileRenderer: FileRenderers.ListThumbnailFile,\n  folderRenderer: FolderRenderers.ListThumbnailFolder\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this), mount[0]); // class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       id: \"\",\n//       html: \"\",\n//       css: \"\",\n//       js: \"\"\n//     };\n//     this.pusher = new Pusher(\"18160601861a89d7f8f7\", {\n//       cluster: \"eu\",\n//       forceTLS: true\n//     });\n//     this.channel = this.pusher.subscribe(\"editor\");\n//   }\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n//   componentDidMount() {\n//     this.setState({\n//       id: pushid()\n//     });\n//     this.channel.bind(\"text-update\", data => {\n//       const { id } = this.state;\n//       if (data.id === id) return;\n//       this.setState({\n//         html: data.html,\n//         css: data.css,\n//         js: data.js\n//       });\n//     });\n//   }\n//   syncUpdates = () => {\n//     const data = { ...this.state };\n//     axios\n//       .post(\"http://localhost:5000/update-editor\", data)\n//       .catch(console.error);\n//   };\n//   runCode = () => {\n//     const { html, css, js } = this.state;\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//         <style>\n//           ${css}\n//         </style>\n//       </head>\n//       <body>\n//         ${html}\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n//   render() {\n//     const { html, js, css } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n//     return (\n//       <div className=\"App\">\n//         <section className=\"files\">\n//           <div className=\"title-header\">FILES</div>\n//         </section>\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"title-header\">EDITOR</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           {/* <div className=\"code-editor css-code\">\n//             <div className=\"editor-header\">CSS</div>\n//             <CodeMirror\n//               value={css}\n//               options={{\n//                 mode: \"css\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, css) => {\n//                 this.setState({ css }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div> */}\n//         </section>\n//         <section className=\"result\">\n//           <div className=\"title-header\">RESULT</div>\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["D:/Pusher/client/src/App.js"],"names":["React","Component","Controlled","CodeMirror","Pusher","pushid","axios","ReactDOM","FileBrowser","FileRenderers","FolderRenderers","Groupers","Icons","Moment","mount","document","querySelectorAll","render","FontAwesome","key","modified","subtract","size","GroupByModifiedRelative","ListThumbnailFile","ListThumbnailFolder"],"mappings":"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":["import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport Pusher from \"pusher-js\";\nimport pushid from \"pushid\";\nimport axios from \"axios\";\nimport ReactDOM from 'react-dom';\n\nimport FileBrowser, { FileRenderers, FolderRenderers, Groupers, Icons } from 'react-keyed-file-browser'\nimport Moment from 'moment';\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nimport \"./App.css\";\n\nconst mount = document.querySelectorAll('div.demo-mount-grouped-thumbnails')\nReactDOM.render(\n  <FileBrowser\n    icons={Icons.FontAwesome(4)}\n    files={[\n      {\n        key: 'cat.png',\n        modified: +Moment().subtract(1, 'hours'),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'kitten.png',\n        modified: +Moment().subtract(3, 'days'),\n        size: 545 * 1024,\n      },\n      {\n        key: 'elephant.png',\n        modified: +Moment().subtract(3, 'days'),\n        size: 52 * 1024,\n      },\n      {\n        key: 'dog.png',\n        modified: +Moment().subtract(1, 'hours'),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'turtle.png',\n        modified: +Moment().subtract(3, 'months'),\n        size: 545 * 1024,\n      },\n      {\n        key: 'gecko.png',\n        modified: +Moment().subtract(2, 'days'),\n        size: 52 * 1024,\n      },\n      {\n        key: 'centipede.png',\n        modified: +Moment().subtract(0.5, 'hours'),\n        size: 1.5 * 1024 * 1024,\n      },\n      {\n        key: 'possum.png',\n        modified: +Moment().subtract(32, 'days'),\n        size: 545 * 1024,\n      },\n    ]}\n    renderStyle=\"list\"\n    nestChildren\n    headerRenderer={null}\n    group={Groupers.GroupByModifiedRelative}\n    fileRenderer={FileRenderers.ListThumbnailFile}\n    folderRenderer={FolderRenderers.ListThumbnailFolder}\n  />,\n  mount[0]\n)\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       id: \"\",\n//       html: \"\",\n//       css: \"\",\n//       js: \"\"\n//     };\n\n//     this.pusher = new Pusher(\"18160601861a89d7f8f7\", {\n//       cluster: \"eu\",\n//       forceTLS: true\n//     });\n\n//     this.channel = this.pusher.subscribe(\"editor\");\n//   }\n\n//   componentDidUpdate() {\n//     this.runCode();\n//   }\n\n//   componentDidMount() {\n//     this.setState({\n//       id: pushid()\n//     });\n\n//     this.channel.bind(\"text-update\", data => {\n//       const { id } = this.state;\n//       if (data.id === id) return;\n\n//       this.setState({\n//         html: data.html,\n//         css: data.css,\n//         js: data.js\n//       });\n//     });\n//   }\n\n//   syncUpdates = () => {\n//     const data = { ...this.state };\n\n//     axios\n//       .post(\"http://localhost:5000/update-editor\", data)\n//       .catch(console.error);\n//   };\n\n//   runCode = () => {\n//     const { html, css, js } = this.state;\n\n//     const iframe = this.refs.iframe;\n//     const document = iframe.contentDocument;\n//     const documentContents = `\n//       <!DOCTYPE html>\n//       <html lang=\"en\">\n//       <head>\n//         <meta charset=\"UTF-8\">\n//         <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//         <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n//         <title>Document</title>\n//         <style>\n//           ${css}\n//         </style>\n//       </head>\n//       <body>\n//         ${html}\n\n//         <script type=\"text/javascript\">\n//           ${js}\n//         </script>\n//       </body>\n//       </html>\n//     `;\n\n//     document.open();\n//     document.write(documentContents);\n//     document.close();\n//   };\n\n  \n//   render() {\n//     const { html, js, css } = this.state;\n//     const codeMirrorOptions = {\n//       theme: \"material\",\n//       lineNumbers: true,\n//       scrollbarStyle: null,\n//       lineWrapping: true\n//     };\n\n//     return (\n//       <div className=\"App\">\n//         <section className=\"files\">\n//           <div className=\"title-header\">FILES</div>\n          \n//         </section>\n\n//         <section className=\"playground\">\n//           <div className=\"code-editor html-code\">\n//             <div className=\"title-header\">EDITOR</div>\n//             <CodeMirror\n//               value={html}\n//               options={{\n//                 mode: \"htmlmixed\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, html) => {\n//                 this.setState({ html }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           {/* <div className=\"code-editor css-code\">\n//             <div className=\"editor-header\">CSS</div>\n//             <CodeMirror\n//               value={css}\n//               options={{\n//                 mode: \"css\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, css) => {\n//                 this.setState({ css }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div>\n//           <div className=\"code-editor js-code\">\n//             <div className=\"editor-header\">JavaScript</div>\n//             <CodeMirror\n//               value={js}\n//               options={{\n//                 mode: \"javascript\",\n//                 ...codeMirrorOptions\n//               }}\n//               onBeforeChange={(editor, data, js) => {\n//                 this.setState({ js }, () => this.syncUpdates());\n//               }}\n//             />\n//           </div> */}\n//         </section>\n\n//         <section className=\"result\">\n//           <div className=\"title-header\">RESULT</div>\n//           <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}