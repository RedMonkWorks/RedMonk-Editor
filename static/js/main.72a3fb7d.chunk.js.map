{"version":3,"sources":["redmonk.png","App.js","reportWebVitals.js","index.js"],"names":["App","runCode","state","html","css","js","document","refs","iframe","contentDocument","documentContents","open","write","close","id","showHTML","showCSS","showJS","hideComponent","bind","name","this","setState","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","className","src","logo","alt","onClick","value","options","mode","onBeforeChange","editor","data","title","ref","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72a3fb7d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/redmonk.72d51ffd.png\";","import React, { Component } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\n\nimport \"./App.css\";\nimport logo from './redmonk.png';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      html: \"\",\n      showHTML : false,\n      showCSS : false,\n      showJS : false\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  hideComponent(name) {\n    switch (name) {\n      case \"showHTML\":\n        this.setState({ showHTML: true, showCSS: false, showJS: false });\n        break;\n      case \"showCSS\":\n        this.setState({ showCSS: true, showJS: false, showHTML: false });\n        break;\n      case \"showJS\":\n        this.setState({ showJS: true, showHTML: false, showCSS: false });\n        break;\n    }\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n    const { html, css, js } = this.state;\n    const { showHTML, showCSS, showJS } = this.state;\n    const codeMirrorOptions = {\n      theme: \"material\",\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true\n    };\n\n    return (\n      <div className=\"App\">\n\n        <section className=\"redmonk\">\n          <table>\n              <tr>\n                <td>\n                  <img className=\"logoRM\" src={logo} alt=\"Logo\" />\n                </td>\n                <td className=\"textRM\">\n                  RedMonk Codes\n                </td>\n              </tr>\n          </table>\n        </section>\n\n        <section className=\"types\">\n          <div className=\"title-header\">EDITOR TYPE</div>\n            <div>\n              <table>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showHTML\")}>\n                      Open HTML Editor\n                    </button>\n                </tr>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showCSS\")}>\n                      Open CSS Editor\n                    </button>\n                </tr>\n                <tr>\n                    <button onClick={() => this.hideComponent(\"showJS\")}>\n                      Open JS Editor\n                    </button>\n                </tr>\n              </table>\n            </div>\n        </section>\n\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"title-header\">EDITOR</div>\n              {showHTML && (\n                <CodeMirror\n                  value={html}\n                  options={{\n                    mode: 'htmlmixed',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, html) => {\n                    this.setState({ html });\n                  }}\n                />\n              )}\n              {showCSS && (\n                <CodeMirror\n                  value={css}\n                  options={{\n                    mode: 'css',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, css) => {\n                    this.setState({ css });\n                  }}\n                />\n              )}\n              {showJS && (\n                <CodeMirror\n                  value={js}\n                  options={{\n                    mode: 'javascript',\n                    ...codeMirrorOptions,\n                  }}\n                  onBeforeChange={(editor, data, js) => {\n                    this.setState({ js });\n                  }}\n                />\n              )}\n            </div>\n        </section>\n\n        <section className=\"result\">\n          <div className=\"title-header\">RESULT</div>\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}